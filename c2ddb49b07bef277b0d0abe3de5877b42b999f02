{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "2c1492a4_994e6743",
        "filename": "tests/alarm_publish.cpp",
        "patchSetId": 7
      },
      "lineNbr": 38,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2022-03-01T17:16:54Z",
      "side": 1,
      "message": "this is something worth a type name",
      "range": {
        "startLine": 38,
        "startChar": 102,
        "endLine": 38,
        "endChar": 166
      },
      "revId": "c2ddb49b07bef277b0d0abe3de5877b42b999f02",
      "serverId": "e32f8df8-3db0-4f76-a6c6-fe9d6e69dd68"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d5e14d87_d1608a33",
        "filename": "tests/alarm_publish.cpp",
        "patchSetId": 7
      },
      "lineNbr": 146,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2022-03-01T17:16:54Z",
      "side": 1,
      "message": "This doesn\u0027t set up an expectation, and since it only accepts one argument, the \"interval\" is hidden inside the implementation. What about:\n SHORTLY_AFTER(time1)",
      "range": {
        "startLine": 146,
        "startChar": 157,
        "endLine": 146,
        "endChar": 177
      },
      "revId": "c2ddb49b07bef277b0d0abe3de5877b42b999f02",
      "serverId": "e32f8df8-3db0-4f76-a6c6-fe9d6e69dd68"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c005563f_8fa09fd7",
        "filename": "tests/test_time_interval.cpp",
        "patchSetId": 7
      },
      "lineNbr": 36,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2022-03-01T17:16:54Z",
      "side": 1,
      "message": "too bad doctest won\u0027t pretty-print a diff of a std::map by default...",
      "revId": "c2ddb49b07bef277b0d0abe3de5877b42b999f02",
      "serverId": "e32f8df8-3db0-4f76-a6c6-fe9d6e69dd68"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "5db2550d_f80c7e1d",
        "filename": "tests/test_time_interval.cpp",
        "patchSetId": 7
      },
      "lineNbr": 43,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2022-03-01T17:16:54Z",
      "side": 1,
      "message": "This might be worth a comment about comparing strings against a fuzzy matcher because I went all the way to cppreference suggesting to use that native operator\u003d\u003d for std::variant before I realized that that would be nonsense. Or perhaps I just need more coffee.",
      "range": {
        "startLine": 43,
        "startChar": 8,
        "endLine": 43,
        "endChar": 94
      },
      "revId": "c2ddb49b07bef277b0d0abe3de5877b42b999f02",
      "serverId": "e32f8df8-3db0-4f76-a6c6-fe9d6e69dd68"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c4c3bcc0_47925a9d",
        "filename": "tests/test_time_interval.h",
        "patchSetId": 7
      },
      "lineNbr": 9,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2022-03-01T17:16:54Z",
      "side": 1,
      "message": "`start`, `end` looks cleaner to me",
      "range": {
        "startLine": 8,
        "startChar": 0,
        "endLine": 9,
        "endChar": 62
      },
      "revId": "c2ddb49b07bef277b0d0abe3de5877b42b999f02",
      "serverId": "e32f8df8-3db0-4f76-a6c6-fe9d6e69dd68"
    }
  ]
}