{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "7c9a4b18_5bf890b0",
        "filename": "tests/alarm_notifications.cpp",
        "patchSetId": 9
      },
      "lineNbr": 54,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2022-03-29T08:23:47Z",
      "side": 1,
      "message": "I think this is a pretty heavy macro. Returning the time as it used to do in one of the previous versions looked cleaner to me. At the same time, it\u0027s pushing expectations anyway, so perhaps this is as good as it gets.",
      "range": {
        "startLine": 29,
        "startChar": 0,
        "endLine": 54,
        "endChar": 5
      },
      "revId": "729053e89325bf8a8a967137c8f2b2a70cd7437e",
      "serverId": "e32f8df8-3db0-4f76-a6c6-fe9d6e69dd68"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "932be687_4b38a9a0",
        "filename": "tests/alarm_notifications.cpp",
        "patchSetId": 9
      },
      "lineNbr": 54,
      "author": {
        "id": 1000070
      },
      "writtenOn": "2022-03-29T09:46:21Z",
      "side": 1,
      "message": "I can split it in two macros (EXPECT, CLIENT_ALARM_RPC) but I thing I need to know the approx. send time in the EXPECT macro already so any time returned from CLIENT_ALARM_RPC is to be discarded anyway.",
      "parentUuid": "7c9a4b18_5bf890b0",
      "range": {
        "startLine": 29,
        "startChar": 0,
        "endLine": 54,
        "endChar": 5
      },
      "revId": "729053e89325bf8a8a967137c8f2b2a70cd7437e",
      "serverId": "e32f8df8-3db0-4f76-a6c6-fe9d6e69dd68"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "49e36738_3c325e70",
        "filename": "tests/alarm_notifications.cpp",
        "patchSetId": 9
      },
      "lineNbr": 54,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2022-03-29T09:54:32Z",
      "side": 1,
      "message": "ok",
      "parentUuid": "932be687_4b38a9a0",
      "range": {
        "startLine": 29,
        "startChar": 0,
        "endLine": 54,
        "endChar": 5
      },
      "revId": "729053e89325bf8a8a967137c8f2b2a70cd7437e",
      "serverId": "e32f8df8-3db0-4f76-a6c6-fe9d6e69dd68"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "83cc911b_3910556a",
        "filename": "tests/events.cpp",
        "patchSetId": 9
      },
      "lineNbr": 0,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2022-03-29T08:23:47Z",
      "side": 1,
      "message": "This class was useful back in sysrepo 0.7 and 1.x days. With the new C++ bindings, though, it should be just a matter of connecting a lambda, and storing some data. Perhaps all this boilerplate from other projects and dealing with different event types can be simplified?",
      "revId": "729053e89325bf8a8a967137c8f2b2a70cd7437e",
      "serverId": "e32f8df8-3db0-4f76-a6c6-fe9d6e69dd68"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4df51e4a_e37c1d57",
        "filename": "tests/events.cpp",
        "patchSetId": 9
      },
      "lineNbr": 0,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2022-03-30T17:36:54Z",
      "side": 1,
      "message": "I tried to implement what I had in mind at https://gerrit.cesnet.cz/c/CzechLight/velia/+/5640 . I would appreciate if you could take a look.",
      "parentUuid": "83cc911b_3910556a",
      "revId": "729053e89325bf8a8a967137c8f2b2a70cd7437e",
      "serverId": "e32f8df8-3db0-4f76-a6c6-fe9d6e69dd68"
    }
  ]
}